{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/contact/contact.component.ts","webpack:///src/app/components/contact/contact.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/portfolio/portfolio.component.ts","webpack:///src/app/components/portfolio/portfolio.component.html","webpack:///src/app/models/projects.ts","webpack:///src/app/services/portfolio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","component","routing","forRoot","AboutComponent","ContactComponent","HomeComponent","PortfolioComponent","portfolioService","loadProjects","projects","getAllProjects","Projects","year","image","description","liveLink","codeLink","stack","PortfolioService","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyPortfolio';\n}\n","<header>\r\n  <div class=\"container\">\r\n    <!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-light\"> -->\r\n    <nav class=\"navbar navbar-dark navbar-expand-lg text-center\">\r\n      <a class=\"navbar-brand\" href=\"#\">Jason Alvarado</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [routerLink]=\"['/home']\"\r\n              routerLinkActive=\"router-link-active\"\r\n              >Home</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [routerLink]=\"['/about']\"\r\n              routerLinkActive=\"router-link-active\"\r\n              >About</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [routerLink]=\"['/portfolio']\"\r\n              routerLinkActive=\"router-link-active\"\r\n              >Portfolio</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              [routerLink]=\"['/contact']\"\r\n              routerLinkActive=\"router-link-active\"\r\n              >Contact</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</header>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { routing } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { PortfolioComponent } from './components/portfolio/portfolio.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortfolioComponent,\n    AboutComponent,\n    ContactComponent,\n    HomeComponent,\n  ],\n  imports: [BrowserModule, routing],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PortfolioComponent } from './components/portfolio/portfolio.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'portfolio', component: PortfolioComponent },\r\n  { path: 'contact', component: ContactComponent },\r\n  { path: '**', component: HomeComponent },\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\r\n  <h1>About</h1>\r\n  <p>\r\n    The main area of my experience is .NET Framework / .NET Core. But I also\r\n    have projects in MEAN & MERN stack\r\n  </p>\r\n</div>\r\n<div class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <section class=\"skill-section\">\r\n        <h3 class=\"skill-title\">Front end</h3>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img\r\n                src=\"../../../assets/img/technologies/angular.png\"\r\n                alt=\"Angular\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img src=\"../../../assets/img/technologies/react.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img\r\n                src=\"../../../assets/img/technologies/bootstrap.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <section class=\"skill-section\">\r\n        <h3 class=\"skill-title\">Back end</h3>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img\r\n                src=\"../../../assets/img/technologies/net-framework.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img src=\"../../../assets/img/technologies/net-core.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img src=\"../../../assets/img/technologies/node-js.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 offset-md-3 col-sm-12\">\r\n      <section class=\"skill-section\">\r\n        <h3 class=\"skill-title\">Database</h3>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img\r\n                src=\"../../../assets/img/technologies/sql-server.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img src=\"../../../assets/img/technologies/mongo-db.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"skill\">\r\n              <img src=\"../../../assets/img/technologies/my-sql.png\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n  <h1 class=\"title\">Contact me</h1>\r\n  <p class=\"subtitle\">Send me a message :D</p>\r\n  <form #contactForm action=\"\" class=\"form\" onsubmit=\"onSubmit()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-sm-12\">\r\n        <p>\r\n          <input type=\"text\" name=\"name\" placeholder=\"Name\" />\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6 col-sm-12\">\r\n        <p>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-sm-12\">\r\n        <p><input type=\"text\" name=\"subject\" placeholder=\"Subject\" /><br /></p>\r\n        <p>\r\n          <textarea\r\n            name=\"message\"\r\n            id=\"message\"\r\n            rows=\"10\"\r\n            placeholder=\"Message\"\r\n          ></textarea>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <p class=\"submit\">\r\n      <input class=\"btn btn-primary\" type=\"submit\" value=\"Send message\" />\r\n    </p>\r\n  </form>\r\n  <p>\r\n    You can also contact me throw\r\n    <a href=\"https://www.linkedin.com/in/jason-alvarado/\">Linkedin</a>\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"vertical-center\">\n  <div class=\"jumbotron\">\n    <h1 class=\"display-4\">Hello, I'm Jason</h1>\n    <p class=\"lead\">I'm a full stack web developer</p>\n    <p class=\"lead\">\n      <a\n        class=\"btn btn-outline-primary btn-lg\"\n        [routerLink]=\"['/portfolio']\"\n        routerLinkActive=\"router-link-active\"\n        >See my projects</a\n      >\n    </p>\n  </div>\n</div>\n","import { PortfolioService } from '../../services/portfolio.service';\r\nimport { Project } from './../../models/project';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-portfolio',\r\n  templateUrl: './portfolio.component.html',\r\n  styleUrls: ['./portfolio.component.css'],\r\n  providers: [PortfolioService],\r\n})\r\nexport class PortfolioComponent implements OnInit {\r\n  public projects: Project[];\r\n\r\n  constructor(private portfolioService: PortfolioService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadProjects();\r\n  }\r\n\r\n  loadProjects() {\r\n    this.projects = this.portfolioService.getAllProjects();\r\n  }\r\n}\r\n","<h1 class=\"title\">My Projects</h1>\r\n<div class=\"row\" *ngIf=\"projects.length > 0\">\r\n  <div class=\"col-md-6 col-sm-12\" *ngFor=\"let project of projects\">\r\n    <div class=\"project\">\r\n      <!-- <p class=\"project-year\">{{ project.year }}</p> -->\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div class=\"project-image\">\r\n            <img\r\n              src=\"../../../assets/img/technologies/{{ project.image }}.png\"\r\n              alt=\"project-photo\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n          <h4 class=\"project-title\">{{ project.title }}</h4>\r\n          <p class=\"project-description\">{{ project.description }}</p>\r\n          <div class=\"project-links\">\r\n            <a class=\"btn btn-outline-primary\" href=\"{{ project.liveLink }}\"\r\n              >View live</a\r\n            >\r\n            <a class=\"btn btn-outline-primary\" href=\"{{ project.codeLink }}\"\r\n              >View code</a\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export var Projects = [\r\n  {\r\n    title: 'Blog manager',\r\n    year: 2020,\r\n    image: 'angular',\r\n    description: 'Blog that allows you to add news, recieve visitors comments',\r\n    liveLink: 'github.com',\r\n    codeLink: 'https://github.com/JasonAlvarado/',\r\n    stack: '.NET Core + Angular',\r\n  },\r\n  {\r\n    title: 'To do app',\r\n    year: 2020,\r\n    image: 'react',\r\n    description: 'Simple to do app',\r\n    liveLink: 'github.com',\r\n    codeLink: 'github.com',\r\n    stack: '.NET Framework + Angular',\r\n  },\r\n  {\r\n    title: 'Forum',\r\n    year: 2020,\r\n    image: 'net-core',\r\n    description: 'Forum app based on Reddit',\r\n    liveLink: 'github.com',\r\n    codeLink: 'github.com',\r\n    stack: '.NET Framework + Angular',\r\n  },\r\n  {\r\n    title: 'Library',\r\n    year: 2020,\r\n    image: 'mongo-db',\r\n    description:\r\n      'This library app allows you to loan and buy books. See statistics and export sell reports',\r\n    liveLink: 'github.com',\r\n    codeLink: 'github.com',\r\n    stack: 'MEAN',\r\n  },\r\n  {\r\n    title: 'Discord Bot',\r\n    year: 2020,\r\n    image: 'node-js',\r\n    description: 'Discord bot that send a message to play videogames',\r\n    liveLink: 'github.com',\r\n    codeLink: 'github.com',\r\n    stack: 'Node Js',\r\n  },\r\n  {\r\n    title: 'Hotel app',\r\n    year: 2020,\r\n    image: 'mysql',\r\n    description: 'This app was created to reserve hotels, it use a public API',\r\n    liveLink: 'github.com',\r\n    codeLink: 'github.com',\r\n    stack: 'MERN',\r\n  },\r\n];\r\n","import { Project } from './../models/project';\r\nimport { Projects } from '../models/projects';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PortfolioService {\r\n  getAllProjects(): Project[] {\r\n    return Projects;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}